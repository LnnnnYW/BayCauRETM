% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_causal_recur.R
\name{fit_causal_recur}
\alias{fit_causal_recur}
\title{Fit Bayesian Causal Recurrent- and Terminal-Event Model}
\usage{
fit_causal_recur(
  data,
  K,
  id_col,
  k_col,
  y_col,
  t_col,
  c_col,
  a_col,
  x_cols = NULL,
  formula_T,
  formula_Y,
  prior,
  num_chains = 4,
  iter = 2000,
  stan_model_file = NULL,
  control = list(adapt_delta = 0.95, max_treedepth = 15),
  verbose = TRUE
)
}
\arguments{
\item{data}{A data.frame in long format, one row per subject and interval.}

\item{K}{Integer. Total number of discrete intervals in the study.}

\item{id_col}{Character. Name of the subject identifier column.}

\item{k_col}{Character. Name of the interval index column (1..K).}

\item{y_col}{Character. Name of the recurrent event count outcome column.}

\item{t_col}{Character. Name of the terminal event indicator column (0/1).}

\item{c_col}{Character. Name of the censoring indicator column (0/1).}

\item{a_col}{Character. Name of the treatment indicator column (0/1 or factor).}

\item{x_cols}{Character vector of additional covariate names, or NULL.}

\item{formula_T}{Formula for the death submodel, e.g. \code{T_obs ~ Y_prev + A + k_idx}.}

\item{formula_Y}{Formula for the count submodel, e.g. \code{Y_obs ~ Y_prev + A + k_idx}.}

\item{prior}{Named list of gAR(1) hyperparameters:
\describe{
\item{eta_beta}{Mean for death intercepts.}
\item{sigma_beta}{SD for death intercepts.}
\item{rho_beta}{AR(1) correlation for death intercepts.}
\item{eta_gamma}{Mean for count intercepts.}
\item{sigma_gamma}{SD for count intercepts.}
\item{rho_gamma}{AR(1) correlation for count intercepts.}
}}

\item{num_chains}{Integer. Number of MCMC chains (default: 4).}

\item{iter}{Integer. Total iterations per chain, including warmup (default: 2000).}

\item{stan_model_file}{Optional character. Path to a pre-compiled Stan model file.}

\item{control}{Optional list. Passed to Stan sampling (see \code{cmdstanr} docs).}

\item{verbose}{Logical. Print progress messages (default: TRUE).}
}
\value{
A list with components:
\describe{
\item{stan_fit}{An rstan::stanfit object with posterior samples.}
\item{data_preprocessed}{Processed data.frame with lagged columns.}
\item{n_pat}{Number of unique subjects.}
\item{design_info}{List with formula and covariate names.}
\item{prior}{Prior hyperparameters as supplied.}
\item{stan_data_list}{List passed to Stan.}
}
}
\description{
Fit a discrete-time Bayesian model for recurrent event counts and a terminal event (death),
with gAR(1) smoothing priors on time-varying intercepts.
}
\details{
Internally, this function calls \code{preprocess_data()}, builds design matrices,
compiles or loads a Stan model, and runs MCMC sampling using \code{rstan::sampling()} or \code{cmdstanr}.
}
\examples{
# Minimal example with fake data
df <- data.frame(
  patient_id = rep(1:2, each = 2),
  k_idx      = rep(1:2, 2),
  Y          = rpois(4, 1),
  T          = rbinom(4, 1, 0.2),
  C          = rbinom(4, 1, 0.05),
  A          = rbinom(4, 1, 0.5),
  X1         = rnorm(4)
)

prior <- list(
  eta_beta    = 0, sigma_beta  = 1, rho_beta   = 0.5,
  eta_gamma   = 0, sigma_gamma = 1, rho_gamma  = 0.5
)

\dontrun{
fit <- fit_causal_recur(
  data       = df,
  K          = 2,
  id_col     = "patient_id",
  k_col      = "k_idx",
  y_col      = "Y",
  t_col      = "T",
  c_col      = "C",
  a_col      = "A",
  x_cols     = "X1",
  formula_T  = T_obs ~ Y_prev + A + k_idx,
  formula_Y  = Y_obs ~ Y_prev + A + k_idx,
  prior      = prior,
  num_chains = 1,
  iter       = 100
)
print(fit)
}

}
