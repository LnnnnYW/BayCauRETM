% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_computation.R
\name{g_computation}
\alias{g_computation}
\title{Bayesian g-computation for recurrent-event rate contrasts}
\usage{
g_computation(Lmat = NULL, fit_out, s_vec, B = 50, cores = 1)
}
\arguments{
\item{Lmat}{Optional baseline design matrix for level/lag effects; if NULL,
it is built from the first row per subject and the right-hand side of
\code{fit_out$design_info$formula_T} (no intercept).}

\item{fit_out}{Output list from \code{\link[=fit_causal_recur]{fit_causal_recur()}}.}

\item{s_vec}{Integer vector of treatment-start intervals.}

\item{B}{Integer. Number of Monte Carlo replicates per posterior draw (default 50).}

\item{cores}{Integer. If > 1, simulate in parallel via \code{parallel::parLapply()}.}
}
\value{
A \code{gcomp_out} list with two components:
\code{R_mat} (rows = posterior draws, columns = strategies \verb{s = 1..K, K+1} for
never treat) and \code{delta} (named list with draws and summaries of
\code{Delta(s) = R(s) - R(K+1)}).
}
\description{
Estimate average recurrent-event rates under different treatment-start times
versus never treating, using teacher-style parameters from \code{\link[=fit_causal_recur]{fit_causal_recur()}}.
}
\details{
For each posterior draw, the algorithm draws Dirichlet weights over subjects,
simulates B replicated paths under each strategy using the teacher-style
parameters (logistic death hazard; Poisson log-mean for recurrent counts with
an optional lag term), averages subject-level rates with the Dirichlet weights,
and stores the contrasts \code{Delta(s)}.
}
\examples{
\donttest{
# g <- g_computation(fit_out = fit, s_vec = 1:K, B = 20)
# print(g)
# plot(g, ref_line = 0)
}

}
\keyword{internal}
