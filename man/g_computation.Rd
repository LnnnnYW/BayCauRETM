% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_computation.R
\name{g_computation}
\alias{g_computation}
\title{Bayesian g-computation for recurrent-event rate contrasts}
\usage{
g_computation(Lmat = NULL, fit_out, s_vec, B = 50, cores = 1)
}
\arguments{
\item{Lmat}{A numeric matrix of size (n_pat*P), where n_pat is the number of subjects
in the fitted data and P is the number of shared non-lag covariates. It is a matrix
of baseline covariates shared by the terminal (T) and recurrent (Y) models,
excluding any lag terms.}

\item{fit_out}{Output list from \code{\link[=fit_causal_recur]{fit_causal_recur()}}.}

\item{s_vec}{Integer vector of treatment-start intervals (values should be
in 1..K).}

\item{B}{Integer. Number of Monte Carlo replicates per posterior draw (default 50).}

\item{cores}{Integer scalar. The number of CPU workers used for the g-computation
simulations, default is 1. If greater than 1, posterior simulations are
evaluated in parallel via \code{parallel::parLapply()}.}
}
\description{
Estimate posterior contrasts of average recurrent-event rates under switching
strategies that start treatment at selected intervals, compared against never
treating. Posterior draws are taken from \code{\link[=fit_causal_recur]{fit_causal_recur()}}, and simulation
uses the terminal-event model with logistic hazard and the recurrent-count model
with log Poisson mean. Optional lag terms in either model are included when
present in the fitted object.
}
\details{
For each posterior draw m, the algorithm samples Dirichlet weights over
subjects (Bayesian bootstrap), simulates B replicated paths under each
switching rule A_k = 1(k >= s), and computes a subject-specific average rate
as the sum of recurrent counts divided by the number of intervals at risk.
Rates are averaged across subjects with the Dirichlet weights to obtain
\code{R(s)}. Contrasts \code{Delta(s)} are formed against never treat (s = K + 1).
Credible intervals are the 2.5\% and 97.5\% quantiles of the posterior draws.
}
\examples{
\donttest{
# g <- g_computation(fit_out = fit, s_vec = 1:K, B = 20)
# print(g)
# plot(g, ref_line = 0)
}

}
\keyword{internal}
