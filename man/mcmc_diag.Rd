% Generated by roxygen2: do not edit by hand
<<<<<<< HEAD
% Please edit documentation in R/mcmc_diagnosis.R
=======
% Please edit documentation in R/MCMC_diagnosis.R
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce
\docType{class}
\name{mcmc_diag}
\alias{mcmc_diag}
\alias{mcmc_diagnosis}
\alias{print.mcmc_diag}
\alias{summary.mcmc_diag}
\alias{plot.mcmc_diag}
<<<<<<< HEAD
\title{MCMC convergence and positivity diagnostics}
=======
\title{MCMC convergence diagnostics}
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce
\usage{
mcmc_diagnosis(
  fit_out,
  pars_to_check = c("beta0", "theta0", "beta1", "theta1", "thetaLag"),
  save_plots = FALSE,
<<<<<<< HEAD
  plot_prefix = "traceplot_",
  positivity = FALSE,
  ps_covariates = NULL
=======
  plot_prefix = "traceplot_"
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce
)

\method{print}{mcmc_diag}(x, ...)

\method{summary}{mcmc_diag}(object, ...)

\method{plot}{mcmc_diag}(x, pars = NULL, use_pretty = TRUE, ...)
}
\arguments{
<<<<<<< HEAD
\item{fit_out}{Output list from \code{fit_causal_recur()}, containing \code{stan_fit}
(an rstan \code{stanfit} object) and, if \code{positivity = TRUE}, \code{data_preprocessed}.}

\item{pars_to_check}{Character vector of parameter-name patterns to diagnose
(patterns are passed to \code{bayesplot::mcmc_trace()}).}

\item{save_plots}{Logical; if \code{TRUE}, save each trace plot as a PNG using \code{plot_prefix}.}

\item{plot_prefix}{Filename prefix for saved plots (default \code{"traceplot_"}).}

\item{positivity}{Logical; if \code{TRUE}, run an additional logistic-regression
propensity-score check (default \code{FALSE}).}

\item{ps_covariates}{Character vector of column names used in the positivity
model (required when \code{positivity = TRUE}).}
=======
\item{fit_out}{List returned by \code{fit_causal_recur()}. Must contain \code{stan_fit}
(an rstan \code{stanfit} object). When \code{positivity = TRUE}, \code{fit_out$data_preprocessed}
is also required.}

\item{pars_to_check}{Character vector of Stan parameter base names to diagnose.
Only names present in the fitted object are used. Default:
\code{c("beta0", "theta0", "beta1", "theta1", "thetaLag")}.}

\item{save_plots}{Logical. Index of whether to save the output plot. If \code{TRUE},
save each trace plot as a PNG using \code{plot_prefix}.}

\item{plot_prefix}{Character scalar. Filename prefix for saved plots (default \code{"traceplot_"}).}
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce

\item{x}{An \code{mcmc_diag} object.}

\item{...}{Additional arguments (ignored).}

\item{object}{An \code{mcmc_diag} object.}

\item{pars}{Optional character vector of parameter names to display.}

\item{use_pretty}{Logical; if \code{TRUE}, match \code{pars} against pretty names (default \code{TRUE}).}
}
\value{
An object of class \code{mcmc_diag}, a list with:
\itemize{
\item \code{stats} — data frame with \code{Parameter}, \code{n_eff}, and \code{Rhat};
\item \code{plots} — named list of ggplot objects for the trace plots.
}
}
\description{
Summarize MCMC convergence for a fitted model (R-hat and effective sample
<<<<<<< HEAD
size), generate trace plots for selected parameters via
\code{bayesplot::mcmc_trace()}, and optionally perform positivity diagnostics
for treatment assignment.
=======
size), generate trace plots for selected parameters via \code{bayesplot::mcmc_trace()}.
}
\details{
The function prints a table of R-hat and effective sample size and creates
trace plots grouped by parameter blocks. Parameter facet labels are mapped to
user-friendly names. If \code{save_plots = TRUE}, trace plots are written to files
using \code{plot_prefix}.
pars_to_check for plotting:
You can pass either raw Stan base names (e.g., "beta0", "thetaLag") or the
aliases below; matching is case-insensitive and allows partial keywords.
Aliases:
\itemize{
\item "T-model": terminal-event block (beta0[]; baseline hazard, covariates, lag terms, time-baseline).
\item "Y-model": recurrent-event block (theta0[]; baseline rate, covariates, lag terms, time-baseline).
\item "treatment_effect_T": treatment effect in the terminal model (beta1).
\item "treatment_effect_Y": treatment effect in the recurrent model (theta1).
\item "Lag": lag-kernel terms (thetaLag), when present.
}
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce
}
\section{Methods (by generic)}{
\itemize{
\item \code{print(mcmc_diag)}: Print the table of MCMC convergence statistics (R-hat & n_eff).

\item \code{summary(mcmc_diag)}: Same as \code{print()} for an \code{mcmc_diag} object.

\item \code{plot(mcmc_diag)}: Display stored trace plots; optionally filter by \code{pars}.

}}
\examples{
\dontrun{
<<<<<<< HEAD
# diag <- mcmc_diagnosis(fit_out, pars_to_check = c("beta0","theta0"))
# print(diag)
# plot(diag, pars = "beta0")
=======
diag <- mcmc_diagnosis(fit_out, pars_to_check = c("beta0","theta0"))
print(diag)
plot(diag, pars = "T-model") # only the terminal-event block
plot(diag, pars = c("Lag","treatment_effect_Y"))
>>>>>>> 759e44d2adaa77e0e2258aa398e3f620bf7ff1ce
}

}
